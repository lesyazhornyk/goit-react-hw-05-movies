{"version":3,"file":"static/js/517.b92051f5.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/CastContent/CastContent.jsx","components/Cast/Cast.jsx","components/GoBackButton/GoBackButton.jsx","components/MovieAdditionalInformation/MovieAdditionalInformation.jsx","components/MovieContent/MovieContent.jsx","components/ReviewContent/ReviewContent.jsx","components/Reviews/Reviews.jsx","pages/MovieDetailsPage.jsx","services/api.js"],"sourcesContent":["import { ColorRing } from 'react-loader-spinner';\n\nconst Loader = ({ isLoading }) => {\n  return (\n    <ColorRing\n      visible={isLoading}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{\n        margin: \"0 auto\"\n      }}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n    />\n  );\n};\n\nexport default Loader;\n","const CastContent = ({ cast }) => {\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  const image = cast.profile_path\n    ? `https://image.tmdb.org/t/p/w200${cast.profile_path}`\n    : defaultImg;\n\n  return (\n    <li>\n      <img src={image} alt=\"cast\" width={100} />\n      <p>{cast.name}</p>\n      <p>Character: {cast.character}</p>\n    </li>\n  );\n};\n\nexport default CastContent;\n","import CastContent from 'components/CastContent/CastContent';\nimport Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCreditsByMovieId } from 'services/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [casts, setCasts] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    async function fetchData() {\n      setLoading(true);\n      try {\n        const credits = await fetchCreditsByMovieId(movieId);\n        setCasts(credits);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <p>Whoops, something went wrong: {error.message}</p>}\n      <Loader isLoading={loading} />\n\n      {casts.length > 0 && !loading && (\n        <ul>\n          {casts.map(cast => (\n            <CastContent key={cast.id} cast={cast} />\n          ))}\n        </ul>\n      )}\n      {!casts.length && !loading && !error && (<p>We don't have any cast for this movie.</p>)}\n    </>\n  );\n};\n\nexport default Cast;\n","import { Link, useLocation } from 'react-router-dom';\n\nconst GoBackButton = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return <Link to={backLinkHref}>Go back</Link>;\n};\n\nexport default GoBackButton;\n","import { useRef } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\n\nconst MovieAdditionalInformation = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const locationRef = useRef(location.state?.from ?? '/');\n\n  return (\n    <div>\n      <h4>Additional Information</h4>\n      <ul>\n        <li>\n          <Link\n            to={`/movies/${movieId}/cast`}\n            state={{ from: locationRef.current }}\n          >\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link\n            to={`/movies/${movieId}/reviews`}\n            state={{ from: locationRef.current }}\n          >\n            Reviews\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieAdditionalInformation;\n","const MovieContent = ({ movie }) => {\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  const image = movie.poster_path\n    ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n    : defaultImg;\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n      }}\n    >\n      <img\n        src={image}\n        alt=\"poster\"\n        width={250}\n        style={{\n          margin: '10px 10px 0 0',\n        }}\n      />\n      <div>\n        <h3>\n          {movie.original_title} ({movie.release_date})\n        </h3>\n        <p>Popularity: {movie.popularity}</p>\n        <h4>Overview</h4>\n        <p>{movie.overview}</p>\n        <h4>Genres</h4>\n        <p>{movie.genres.map(genre => genre.name).join(' ')}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieContent;\n","const ReviewContent = ({ review }) => {\n  return (\n    <li>\n      <h5>Author: {review.author}</h5>\n      <p>{review.content}</p>\n    </li>\n  );\n};\n\nexport default ReviewContent;\n","import ReviewContent from 'components/ReviewContent/ReviewContent';\nimport Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewsByMovieId } from 'services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    async function fetchData() {\n      setLoading(true);\n      try {\n        const reviewsResponse = await fetchReviewsByMovieId(movieId);\n        setReviews(reviewsResponse);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <p>Whoops, something went wrong: {error.message}</p>}\n      <Loader isLoading={loading} />\n\n      {reviews.length > 0 && !loading && (\n        <ul>\n          {reviews.map(review => (\n            <ReviewContent key={review.id} review={review} />\n          ))}\n        </ul>\n      )}\n      {!reviews.length && !loading && !error && (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import Cast from 'components/Cast/Cast';\nimport GoBackButton from 'components/GoBackButton/GoBackButton';\nimport MovieAdditionalInformation from 'components/MovieAdditionalInformation/MovieAdditionalInformation';\nimport MovieContent from 'components/MovieContent/MovieContent';\nimport Reviews from 'components/Reviews/Reviews';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieById } from 'services/api';\n\nexport default function MovieDetailsPage({ cast, reviews }) {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState();\n\n  useEffect(() => {\n    if (!movieId) return;\n    async function getMovieDetails() {\n      try {\n        const movie = await fetchMovieById(movieId);\n        setMovieDetails(movie);\n      } catch (error) {}\n    }\n    getMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <GoBackButton />\n      {movieDetails && (\n        <>\n          <MovieContent movie={movieDetails} />\n          <hr />\n          <MovieAdditionalInformation />\n          <hr />\n          {cast && <Cast />}\n          {reviews && <Reviews />}\n        </>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '72aeab2a322c3635130c33f86690232e';\n\nexport const fetchTradingToday = async () => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  const response = await axios.get(`${BASE_URL}trending/movie/day?${params}`);\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    query,\n  });\n\n  const response = await axios.get(`${BASE_URL}search/movie?${params}`);\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  const response = await axios.get(`${BASE_URL}movie/${movieId}?${params}`);\n  return response.data;\n};\n\nexport const fetchReviewsByMovieId = async movieId => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?${params}`\n  );\n  return response.data.results;\n};\n\nexport const fetchCreditsByMovieId = async movieId => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?${params}`\n  );\n  return response.data.cast;\n};\n\nconst api = {\n  fetchCreditsByMovieId,\n  fetchReviewsByMovieId,\n  fetchTradingToday,\n  fetchMovieById,\n  searchMovies,\n};\n\nexport default api;\n"],"names":["_ref","isLoading","_jsx","ColorRing","visible","height","width","ariaLabel","wrapperStyle","margin","wrapperClass","colors","cast","image","profile_path","concat","_jsxs","children","src","alt","name","character","movieId","useParams","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","casts","setCasts","useEffect","_fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","credits","_context","prev","next","fetchCreditsByMovieId","sent","t0","finish","stop","apply","arguments","fetchData","_Fragment","message","Loader","length","map","CastContent","id","_location$state$from","_location$state","backLinkHref","useLocation","state","from","Link","to","location","locationRef","useRef","current","movie","poster_path","style","display","original_title","release_date","popularity","overview","genres","genre","join","review","author","content","reviews","setReviews","reviewsResponse","fetchReviewsByMovieId","ReviewContent","MovieDetailsPage","movieDetails","setMovieDetails","_getMovieDetails","fetchMovieById","getMovieDetails","GoBackButton","MovieContent","MovieAdditionalInformation","Cast","Reviews","BASE_URL","API_KEY","fetchTradingToday","params","response","URLSearchParams","api_key","axios","abrupt","data","results","searchMovies","_ref2","_callee2","query","_context2","_x","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}